version: '3.9'

services:
  postgres-estoque:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: estoque
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
    ports:
      - "5432:5432"
    volumes:
      - estoque-data:/var/lib/postgresql/data
      - ./scripts/migrations/estoque-init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin", "-d", "estoque"]
      interval: 5s
      timeout: 3s
      retries: 5

  postgres-faturamento:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: faturamento
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
    ports:
      - "5433:5432"
    volumes:
      - faturamento-data:/var/lib/postgresql/data
      - ./scripts/migrations/faturamento-init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin", "-d", "faturamento"]
      interval: 5s
      timeout: 3s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  servico-estoque:
    build: ./servico-estoque
    ports:
      - "5001:8080"
    environment:
      ConnectionStrings__DefaultConnection: Host=postgres-estoque;Database=estoque;Username=admin;Password=admin123
      RabbitMQ__Host: rabbitmq
      RabbitMQ__Username: admin
      RabbitMQ__Password: admin123
    depends_on:
      postgres-estoque:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  servico-faturamento:
    build: ./servico-faturamento
    ports:
      - "5002:8080"
    environment:
      DATABASE_URL: postgres://admin:admin123@postgres-faturamento:5432/faturamento?sslmode=disable
      RABBITMQ_URL: amqp://admin:admin123@rabbitmq:5672/
    depends_on:
      postgres-faturamento:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  # web-app:
  #   build: ./web-app
  #   ports:
  #     - "4200:80"
  #   environment:
  #     API_ESTOQUE: http://localhost:5001
  #     API_FATURAMENTO: http://localhost:5002
  #   depends_on:
  #     - servico-estoque
  #     - servico-faturamento

volumes:
  estoque-data:
  faturamento-data: